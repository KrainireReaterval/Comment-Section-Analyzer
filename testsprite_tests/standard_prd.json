{
  "meta": {
    "project": "YouTube Comment Section Analyzer",
    "date": "2025-10-18",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "YouTube Comment Section Analyzer is a web application that leverages AI-powered sentiment analysis, topic extraction, and trend visualization to provide detailed insights into YouTube video comment sections. It supports large-scale comment analysis and offers interactive visualizations to help content creators, marketing teams, researchers, and educators understand audience engagement and discussion patterns.",
  "core_goals": [
    "Provide advanced AI-powered sentiment and topic analysis of YouTube video comments.",
    "Enable analysis of large volumes of comments (up to 10,000) for comprehensive insights.",
    "Present interactive and easy-to-understand visualizations including charts and trend graphs.",
    "Support real-time processing and feedback during comment analysis.",
    "Offer controversy detection to identify highly debated topics within comments.",
    "Provide downloadable reports summarizing the analysis results.",
    "Ensure a user-friendly and responsive interface accessible on desktop and mobile."
  ],
  "key_features": [
    "Homepage with a form to input YouTube video URL, optional creator URL, and select max comments for analysis.",
    "Robust validation of YouTube video URLs supporting multiple URL formats.",
    "Backend integration with YouTube Data API to scrape comments, metadata, and replies with pagination.",
    "AI-powered sentiment analysis using OpenAI API for advanced emotion, topic, and controversy detection.",
    "Fallback basic sentiment classification for quick analysis if needed.",
    "Trend analysis module capturing sentiment and topic evolution over time.",
    "Interactive doughnut charts visualizing sentiment distributions using Chart.js.",
    "Comprehensive report page showing video info, sentiment overview, main topics, sample comments, and trend visualizations.",
    "Loading page with animated progress and status messages during analysis.",
    "Functionality to download analysis reports as plain text files containing key metrics and insights.",
    "Global state management for current page, analysis results, loading states, and error handling.",
    "Backend Flask API endpoints for analyzing videos, retrieving reports, listing analyses, and health checks.",
    "Database models using SQLAlchemy for storing videos, comments, and analysis results in SQLite.",
    "Comprehensive error handling with user-friendly UI messages for invalid inputs and API failures."
  ],
  "user_flow_summary": [
    "User lands on homepage with a clean, modern design and inputs a YouTube video URL and optional creator profile URL.",
    "User selects the maximum number of comments to analyze within allowed range (500-10,000).",
    "User submits the form triggering frontend validation of the URL and sending request to backend API for comment scraping and analysis.",
    "Loading screen with progress bar and animated brain icon is displayed while backend processes the request.",
    "Backend scrapes comments via YouTube Data API, performs AI-powered sentiment and topic analysis, detects controversies, and stores results.",
    "Upon completion, user is redirected to the Analysis Report page showing interactive visualizations including sentiment doughnut charts, topic breakdowns, trending patterns over time, and sample comments.",
    "User can download the analysis report as a text file.",
    "User can explore detailed metrics, trend patterns, and controversy insights via the report interface."
  ],
  "validation_criteria": [
    "System correctly validates diverse YouTube video URL formats and extracts valid video IDs.",
    "Backend successfully scrapes the specified number of comments using YouTube Data API with pagination.",
    "AI-powered sentiment analysis produces expected classification and topic extraction with high accuracy.",
    "Frontend displays loading state and progress indicator reliably during analysis processing.",
    "Analysis report page renders all key data elements including video info, charts, topics, and comments samples correctly and responsively.",
    "Download report functionality generates a plain text file containing comprehensive analysis details.",
    "Error handling gracefully manages invalid inputs, API failures, and network errors showing informative user messages.",
    "All interactive charts and trend visualizations respond correctly to user interactions.",
    "Database persists analysis data and is retrievable via backend endpoints.",
    "API endpoints respond correctly according to the documented request and response formats."
  ],
  "code_summary": {
    "tech_stack": [
      "HTML",
      "JavaScript (Vanilla)",
      "Python",
      "Flask",
      "SQLAlchemy",
      "Tailwind CSS",
      "Chart.js",
      "Lucide Icons",
      "YouTube Data API",
      "OpenAI API",
      "Redis",
      "SQLite"
    ],
    "features": [
      {
        "name": "Home Page with Analysis Form",
        "description": "Main landing page with a form to input YouTube video URL, creator URL (optional), and max comments selection. Includes hero section with feature highlights and responsive design.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "YouTube URL Validation",
        "description": "Validates YouTube video URLs and extracts video IDs from various YouTube URL formats (youtube.com/watch?v= and youtu.be/).",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Video Analysis API Integration",
        "description": "Frontend function to call backend API to analyze YouTube video comments. Sends video URL and max comments parameters to the backend for processing.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Loading Page with Progress Indicator",
        "description": "Displays animated loading screen with progress bar while comment analysis is being processed. Shows status messages and animated brain icon.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Analysis Report Page",
        "description": "Comprehensive report page displaying video information, sentiment analysis results, topic distribution, and sample comments. Includes interactive charts and visualizations.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Sentiment Distribution Chart",
        "description": "Doughnut chart visualization showing the distribution of positive, negative, and neutral sentiments across analyzed comments using Chart.js.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Report Download Functionality",
        "description": "Allows users to download the analysis report as a plain text file with all key metrics, sentiment distribution, and topic breakdown.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "State Management",
        "description": "Global application state management handling current page, analysis data, loading state, and error handling.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Backend API Routes",
        "description": "Flask API endpoints for analyzing videos and retrieving video reports. Handles POST requests for analysis and GET requests for reports.",
        "files": [
          "backend/app/routes/api.py"
        ]
      },
      {
        "name": "YouTube Comment Scraper",
        "description": "Service to scrape YouTube comments using YouTube Data API. Fetches video metadata, comments, and replies with pagination support.",
        "files": [
          "backend/app/services/youtube_scraper.py"
        ]
      },
      {
        "name": "AI-Powered Sentiment Analysis",
        "description": "Uses OpenAI API to perform advanced sentiment analysis on comments, extracting emotions, topics, and controversy detection.",
        "files": [
          "backend/app/services/ai_analyzer.py"
        ]
      },
      {
        "name": "Basic Sentiment Analyzer",
        "description": "Provides basic sentiment classification (positive, negative, neutral) for comments as a fallback or quick analysis option.",
        "files": [
          "backend/app/services/sentiment_analyzer.py"
        ]
      },
      {
        "name": "Trend Analysis",
        "description": "Analyzes comment trends over time, identifying patterns in sentiment and topic evolution throughout the comment section.",
        "files": [
          "backend/app/services/trend_analyzer.py"
        ]
      },
      {
        "name": "Number Formatting Utility",
        "description": "Formats large numbers into readable format (K for thousands, M for millions) for display in the UI.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Date Formatting Utility",
        "description": "Converts ISO date strings into human-readable format for displaying video publication dates and comment timestamps.",
        "files": [
          "index.html"
        ]
      },
      {
        "name": "Frontend HTTP Server",
        "description": "Simple Python HTTP server with CORS support to serve the frontend HTML application on port 8080.",
        "files": [
          "start_server.py"
        ]
      },
      {
        "name": "Database Models",
        "description": "SQLAlchemy ORM models for storing video data, comments, analysis results, and user sessions in SQLite database.",
        "files": [
          "backend/app/models"
        ]
      },
      {
        "name": "Error Handling and Validation",
        "description": "Comprehensive error handling for invalid URLs, API failures, and network errors with user-friendly error messages displayed in the UI.",
        "files": [
          "index.html"
        ]
      }
    ]
  }
}
